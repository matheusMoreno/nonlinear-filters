
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%% Set Parameters for Filter Coefficient %%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%% and Variable Gain Estimation %%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
%
% Author: Carlos Lordelo
% Last modified: Jun/2018

%% Defining the Audio Files and Sampling Frequency
%MIXTURE_FILE = 'Mixture.wav';
SOUNDTRACK_FILE = '../AudioFiles/soundtrack.wav';              % Soundtrack File
SOUNDTRACK_FILE1 = '../AudioFiles/soundtrack4.wav';
DATA_FILE = '../AudioFiles/data.wav';                          % Dialogue File
DATA_FILE1 = '../AudioFiles/data4.wav';
MIXTURE_FILE = '../AudioFiles/mixture4.wav';

[~, Fs] = audioread(DATA_FILE);


%% Parameters to cut off an excerpt from the soundtrack before adding it to the original dialogue signal

initialSample = round(0*Fs);                      % Initial sample to cut off an excerpt from the soundtrack
if initialSample == 0
    initialSample = 1;                            % Matlab's first position is 1 instead of 0
end

finalSample   = round(17*Fs);                     % Final sample to cut off an excerpt from the soundtrack

delay = round(15.5*Fs);                           % The delay used on DATA_FILE before adding it to the soundtrack's excerpt 
                                                  % Initial sample of the original data to be added to the excerpt

%% Parameters to generate the filter coefficients that is going to be used to filter the excerpt file 
filterSoundtrack_bool = true;                    % 'false' to ignore filtering process and 'true' to use filter

%if filterSoundtrack_bool
%    filterOrder = 49;                                 % The order of the lowpass filter, remember length(filter) = filterOrder + 1
%    cutoffFreq = 0.3;                                 % Normalized cutoff Frequency, i.e., for omega_c = pi, use cutoffFreq = 1
%    sizeFilter = filterOrder + 1;                     % The length of the lowpass filter
%end

%% Parameters to apply a constant or a variable gain on the excerpt samples before adding them to the dialogue signal
variableGain_bool = true;                        % Boolean Parameter to decide if there is going to be used a constant or a variable gain on the excerpt samples

if ~variableGain_bool
% For constant gain use the following parameters on function 'GenerateGainCurve'
    constantGain = 0.45;                              % The constant gain to be applied in all of the samples of the soundtrack excerpt signal 
    constantGainPosition_vector = [1, finalSample - initialSample + 1];  %%%%% DO NOT EDIT, NECESSARY PARAMETERS FOR 'GenerateGainCurve' FUNCTION %%%%%
    constantGain_vector = [constantGain, constantGain];                  %%%%%%%%%%%%% FOR MORE INFORMATION CHECK FUNCTION DOCUMENTATION %%%%%%%%%%%%%%
else
% For variable gain use the following parameters on function 'ApplyData' 
    position_vector = [1   6*Fs 11*Fs 16*Fs];         % positions of 'position_vector' associated to the gains in 'variableGain_vector'
    variableGain_vector =  [0.05  0.8  0.8  0.05];    % for more information check 'ApplyGain' function
end

save ('mixture4.mat')